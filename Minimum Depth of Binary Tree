/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if (root == NULL) return 0;
        queue<TreeNode*> myQueue;
        myQueue.push(root);
        int depth = 0;
        while (!myQueue.empty()) {
            depth++;
            int TreeSize = myQueue.size();
            for (int i=0; i<TreeSize; i++) {
                TreeNode* node = myQueue.front();
                myQueue.pop();
                if (node->left) myQueue.push(node->left);
                if (node->right) myQueue.push(node->right);
                if (node->left==NULL && node->right==NULL) return depth;
            }
        }
        return depth;
    }
};
